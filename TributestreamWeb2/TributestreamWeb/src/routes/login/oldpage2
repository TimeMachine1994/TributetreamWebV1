<script lang="ts">
    import { goto } from '$app/navigation';
    import { writable } from 'svelte/store';

    // User input stores
    let username = '';
    let password = '';

    const error = writable<string | null>(null);

    async function login() {
        try {
            // Authenticate and obtain JWT
            const loginResponse = await fetch('https://wp.tributestream.com/wp-json/jwt-auth/v1/token', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ username, password })
            });

            if (!loginResponse.ok) {
                const errData = await loginResponse.json();
                error.set(errData.message || 'Login failed');
                return;
            }

            const { token } = await loginResponse.json();

            // Save JWT to local storage
            localStorage.setItem('jwt', token);

            // Fetch user role
            const roleResponse = await fetch('https://wp.tributestream.com/wp-json/custom/v1/user-role', {
                method: 'GET',
                headers: { Authorization: `Bearer ${token}` }
            });

            if (!roleResponse.ok) {
                throw new Error('Failed to fetch user role');
            }

            const { roles } = await roleResponse.json();

            // Redirect based on role
            if (roles.includes('administrator')) {
                goto('/admin');
            } else {
                goto('/dashboard');
            }
        } catch (err) {
            error.set('An unexpected error occurred');
        }
    }
</script>

<div class="login-form">
    <h1>Login</h1>
    <input
        type="text"
        placeholder="Username"
        bind:value={username}
    />
    <input
        type="password"
        placeholder="Password"
        bind:value={password}
    />
    <button on:click={login}>Login</button>
    {#if $error}
        <p class="error">{$error}</p>
    {/if}
</div>
